for matrix A
    [[4.0, 1.0, 1.0, 0.0, 1.0], 
     [-1.0, -3.0, 1.0, 1.0, 0.0], 
     [2.0, 1.0, 5.0, -1.0, -1.0],
     [-1.0, -1.0, -1.0, 4.0, 0.0],
     [0.0, 2.0, -1.0, 1.0, 4.0]]

 with output b
    [6.0, 6.0, 6.0, 6.0, 6.0]
inti x
    [1.0, 1.0, 1.0, 1.0, 1.0]
max_iteration
    n = 100
Error tolerance
    eps = 1e-3

Output of Jacobi method
    
    step is 1 : [ 0.75       -1.66666667  1.          2.25        1.        ]
    step is 2 : [ 1.41666667 -1.16666667  1.88333333  1.52083333  2.02083333]
    step is 3 : [ 0.815625   -1.3375      1.575       2.03333333  2.17395833]
    step is 4 : [ 0.89713542 -1.06909722  1.98270833  1.76328125  2.05416667]
    step is 5 : [ 0.75805556 -1.05038194  1.81845486  1.95268663  2.08940538]
    step is 6 : [ 0.78563043 -0.99563802  1.91527257  1.88153212  1.99163303]
    step is 7 : [ 0.77218311 -0.99627525  1.85950846  1.92631624  2.00625412]
    step is 8 : [ 0.78262816 -0.9954528   1.87689588  1.90885408  1.98143568]
    step is 9 : [ 0.78428031 -0.9989594   1.86409725  1.91601781  1.98973685]
    step is 10 : [ 0.78628133 -1.00138842  1.86723069  1.91235454  1.98649956]
    step is 11 : [ 0.78691454 -1.00223203  1.86553597  1.9130309   1.98941325]
    step is 12 : [ 0.7868207  -1.00278256  1.86616942  1.91255462  1.98924228]
    
    solve after 12 steps: [ 0.7868207  -1.00278256  1.86616942  1.91255462  1.98924228]